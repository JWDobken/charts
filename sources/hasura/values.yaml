## Global Docker image parameters for Hasura
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry and imagePullSecrets

replicaCount: 1

image:
  repository: hasura/graphql-engine
  pullPolicy: IfNotPresent
  tag: "v1.3.3"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

## Hasura config
## ref: https://hasura.io/docs/1.0/graphql/core/index.html
hasuraConfig:
  hasuraService: custom
  databaseUrl: postgres://username:password@hostname:port/dbname
  # enable the console served by server
  enableConsole: true
  # enable debugging mode. It is recommended to disable this in production
  devMode: true
  adminSecret: mysecretkey

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: "nginx"    
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
  - hasura.example.io
  tls:
  - secretName: hasura.example-tls
    hosts:
    - hasura.example.io

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
